---
const {
  src = "cloudinary/okiki-ojo",
  alt = "An image of a ...",
  loading = "lazy",
  class: className,
  figureAttrs = {},
  ...rest
} = Astro.props;
let { class, ...attrs } = figureAttrs;

let cloudinaryTest = /^cloudinary\//.test(src);
let fetchTest = /\/fetch\//.test(src);

let origin = (!import.meta.env.DEV ? `https://okikio.dev/images/` : `https://res.cloudinary.com/okikio-assets/image/`) + (fetchTest ? "fetch/" : "upload/");
let urlParse = (filters = "w_auto") =>
  cloudinaryTest
    ? `${origin + (fetchTest ? "" : "f_auto,q_auto:best/c_fit," + filters + ",dpr_auto/")}${src.replace(
        /(^cloudinary\/)|fetch\//g,
        ""
      )}`
    : src;

let n = 4;
let webP = fetchTest ? "" : ".webp";
let srcset = `${urlParse(`w_auto`) + webP} 300w`;
let sizes = `(max-width: 300px) 300px, `;
while (n <= 16) {
  srcset += `, ${urlParse(`w_${n * 100}`) + webP} ${n * 100}w`;
  sizes += `(max-width: ${n * 100}px) ${n * 100}px, `;
  n += 3;
}

sizes += `100vw`;
---

<figure class={className} {...attrs}>
  <img src={`${urlParse()}.webp`} {srcset} {sizes} {alt} {loading} {...rest} />
</figure>

<style lang="scss">
  figure {
    @apply relative block;
    @apply bg-[#1f1f2c];
    @apply overflow-hidden;
    @apply w-full h-[350px];

    img {
      @apply w-full h-full;
      @apply object-center;
      @apply object-cover;
      @apply opacity-70;
    }
  }
</style>
