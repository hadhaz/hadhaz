@use "./mixin.scss" as *;
@use "sass:math";
@use "sass:selector";


$minHeight: (
        "0": 0,
        "1": 1px,
        "300": 300px,
        "400": 400px,
        "450": 450px,
        "500": 500px,
);

.min-h {
    @include propertyList(min-height, $minHeight);
}

.container-lg {
    @apply container max-w-screen-lg lt-sm:px-3 sm:px-10;
}

.container-xl {
    @apply container max-w-screen-xl lt-sm:px-3 sm:px-10;
}

.layout {
    @apply px-3 py-12 sm:px-10 sm:py-24;
}

.banner-layout {
    @apply px-6 py-16 sm:px-10 sm:py-32;
}

.rounded-layout {
    @apply container max-w-screen-lg my-3 sm:my-10 lg:rounded-2xl;
}

.row {
    @apply flex flex-row flex-wrap;

    [class*="col"] {
        @apply relative w-full max-w-full;
        min-height: 1px;
    }
}

.col {
    @apply flex-grow max-w-full;
    flex-basis: 0;

    @for $i from 1 through 12 {
        &-#{$i} {
            max-width: math.div(100%, 12) * $i !important;

            @screen lt-md {
                @if $i>=6 {
                    max-width: 100% !important;
                } @else {
                    max-width: 50% !important;
                }
            }

            @screen lt-sm {
                max-width: 100% !important;
            }
        }
    }
}

.col-grid {
    @apply -mx-1 sm:-mx-2;

    & > * {
        @apply px-1 sm:px-2 py-2;
    }

    a {
        @apply block;
    }
}

.grid-4 {
    @apply grid grid-flow-row gap-y-24 gap-x-0;
    display: grid;
    grid-auto-flow: row;
    row-gap: get($sizes, "16");
    column-gap: 0;

    @include screen("md") {
        grid-auto-flow: columns;
        grid-template-columns: repeat(2, minmax(0, 1fr));
        column-gap: get($sizes, "24");
        row-gap: get($sizes, "20");
        text-align: center;
    }
}

.grid-6 {
    margin-top: get($sizes, "12");
    display: grid;
    grid-auto-flow: row;
    row-gap: get($sizes, "12");
    column-gap: 0;

    @include screen("md") {
        grid-auto-flow: columns;
        grid-template-columns: repeat(3, minmax(0, 1fr));
        column-gap: get($sizes, "6");
    }
}